.catalog:
  name: Telegraf Metrics Collector
  version: 1.0-rancher0
  uuid: monitoring-hosts-0
  description: |
    Collects Host Metrics
  questions:
    - variable: "env"
      type: "string"
      required: true
      label: "Environment"
      description: Environment name to tags logs with
telegraf-conf:
  metadata:
    config: &id001
      telegraf:
        content: |
          # Telegraf configuration

          # Telegraf is entirely plugin driven. All metrics are gathered from the
          # declared inputs, and sent to the declared outputs.

          # Plugins must be declared in here to be active.
          # To deactivate a plugin, comment out the name and any variables.

          # Use 'telegraf -config telegraf.conf -test' to see what metrics a config
          # file would generate.

          # Global tags can be specified here in key="value" format.
          [tags]
            # dc = "us-east-1" # will tag all metrics with dc=us-east-1
            # rack = "1a"
            environment = "${env}"

          # Configuration for telegraf agent
          [agent]
            # Default data collection interval for all inputs
            interval = "30s"
            # Rounds collection interval to 'interval'
            # ie, if interval="10s" then always collect on :00, :10, :20, etc.
            round_interval = true

            ## Telegraf will send metrics to outputs in batches of at
            ## most metric_batch_size metrics.
            metric_batch_size = 1000
            ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
            ## output, and will flush this buffer on a successful write. Oldest metrics
            ## are dropped first when this buffer fills.
            metric_buffer_limit = 100000

            # Collection jitter is used to jitter the collection by a random amount.
            # Each plugin will sleep for a random time within jitter before collecting.
            # This can be used to avoid many plugins querying things like sysfs at the
            # same time, which can have a measurable effect on the system.
            collection_jitter = "5s"

            # Default data flushing interval for all outputs. You should not set this below
            # interval. Maximum flush_interval will be flush_interval + flush_jitter
            flush_interval = "30s"
            # Jitter the flush interval by a random amount. This is primarily to avoid
            # large write spikes for users running a large number of telegraf instances.
            # ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
            flush_jitter = "15s"

            ## By default, precision will be set to the same timestamp order as the
            ## collection interval, with the maximum being 1s.
            ## Precision will NOT be used for service inputs, such as logparser and statsd.
            ## Valid values are "ns", "us", "ms", "s".
            precision = ""

            # Run telegraf in debug mode
            debug = false
            # Run telegraf in quiet mode
            quiet = false
            # Override default hostname, if empty use os.Hostname()
            hostname = ""


          ###############################################################################
          #                                  OUTPUTS                                    #
          ###############################################################################


          # Configuration for influxdb server to send metrics to
          [[outputs.influxdb]]
            ### The full HTTP or UDP endpoint URL for your InfluxDB instance.
            ### Multiple urls can be specified but it is assumed that they are part of the same
            ### cluster, this means that only ONE of the urls will be written to each interval.
            # urls = ["udp://localhost:8089"] # UDP endpoint example
            urls = ["http://influx.biw-labs.com:80"] # required
            ### The target database for metrics (telegraf will create it if not exists)
            database = "aws" # required
            ### Precision of writes, valid values are n, u, ms, s, m, and h
            ### note: using second precision greatly helps InfluxDB compression
            precision = "s"

            ### Connection timeout (for the connection with InfluxDB), formatted as a string.
            ### If not provided, will default to 0 (no timeout)
            # timeout = "5s"
            # username = "telegraf"
            # password = "metricsmetricsmetricsmetrics"
            ### Set the user agent for HTTP POSTs (can be useful for log differentiation)
            # user_agent = "telegraf"
            ### Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
            # udp_payload = 512

          ###############################################################################
          #                                  INPUTS                                     #
          ###############################################################################


          # Read metrics about cpu usage
          [[inputs.cpu]]
            # Whether to report per-cpu stats or not
            percpu = true
            # Whether to report total system cpu stats or not
            totalcpu = true
            # Comment this line if you want the raw CPU time metrics
            drop = ["time_*"]
          [[inputs.mem]]
          [[inputs.disk]]
            ignore_fs = ["tmpfs", "devtmpfs"]
          [[inputs.docker]]
            # Docker Endpoint
            #   To use TCP, set endpoint = "tcp://[ip]:[port]"
            #   To use environment variables (ie, docker-machine), set endpoint = "ENV"
            endpoint = "unix:///var/run/docker.sock"
            # Only collect metrics for these containers, collect all if empty
            container_names = []

          # General TCP Listener (for Health Check ONLY!)
          [[inputs.tcp_listener]]
            service_address = ":2222"

          [[inputs.udp_listener]]
            ## Address and port to host UDP listener on
            service_address = ":8092"

            ## Number of UDP messages allowed to queue up. Once filled, the
            ## UDP listener will start dropping packets.
            allowed_pending_messages = 10000

            ## Data format to consume.
            ## Each data format has it's own unique set of configuration options, read
            ## more about them here:
            ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
            data_format = "influx"


          ###############################################################################
          #                              SERVICE INPUTS                                 #
          ###############################################################################
        path: /config/telegraf/telegraf.conf
telegraf:
  health_check:
    port: 2222
    interval: 2000
    unhealthy_threshold: 3
    strategy: recreate
    healthy_threshold: 2
  metadata:
    config: *id001
